/*
 * rs-project-startup
 *
 * A framework for quickly starting a Rust project
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use super::super::models;

/// ResponseRefreshTokenRes : Unified error response exposed externally
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResponseRefreshTokenRes {
    #[serde(rename = "code")]
    pub code: i64,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Box<models::ResponseRefreshTokenResData>>,
    #[serde(rename = "msg")]
    pub msg: String,
}

impl ResponseRefreshTokenRes {
    /// Unified error response exposed externally
    pub fn new(code: i64, msg: String) -> ResponseRefreshTokenRes {
        ResponseRefreshTokenRes {
            code,
            data: None,
            msg,
        }
    }
}
